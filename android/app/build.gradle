plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.bunjai_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.example.bunjai_app"
        minSdk = flutter.minSdkVersion
        minSdkVersion 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }

    packaging {
        resources {
            // ตัดพวก license/notice และดัชนีทิ้ง
            excludes += [
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/LICENSE.md',
                'META-INF/LICENSE-notice.md',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/NOTICE.md',
                'META-INF/ASL2.0',
                'META-INF/AL2.0',
                'META-INF/LGPL2.1',
                'META-INF/INDEX.LIST'
            ]

            // ไฟล์ service/metadata บางตัวจาก lib หลายตัวอาจซ้ำกัน — เลือกไฟล์แรกไปเลย
            pickFirsts += [
                'META-INF/services/*',
                'META-INF/*kotlin_module'
            ]
        }
    }

}

flutter {
    source = "../.."
}

dependencies {
    // บังคับใช้ Guava เวอร์ชันที่เข้ากับ AGP 8.x
    implementation 'com.google.guava:guava:31.1-jre'
}

// บังคับให้ทุก dependency ใช้เวอร์ชันนี้
configurations.all {
    resolutionStrategy {
        force 'com.google.guava:guava:31.1-jre'
    }
}
